fix: Acknowledge and document architectural deviation in HTTP Organizer Peer

This commit documents a critical architectural deviation from the kdapp P2P philosophy:

**Problem:**
- The HTTP Organizer Peer (and the daemon's authentication flow) currently uses its own `participant-peer-wallet.key` to fund and submit all three blockchain transactions (`NewEpisode`, `RequestChallenge`, `SubmitResponse`) on behalf of the authenticating participant.
- This violates the core `kdapp` principle that participants should fund their own on-chain actions, and the Organizer Peer should only coordinate and verify, not pay for or submit participant transactions.

**Impact:**
- Leads to confusion regarding funding responsibilities.
- Deviates from the true P2P model where peers are economically independent for their actions.
- Causes the `HTTP 503 Service Unavailable` error when the Organizer's `participant-peer-wallet` is unfunded, as it attempts to submit transactions.

**Current State:**
- The daemon is now correctly creating and unlocking identities.
- The `http-organizer-peer` is able to start and connect to the Kaspa node.
- The authentication flow proceeds until the Organizer Peer attempts to submit transactions without sufficient funds in its *own* participant wallet.

**Next Steps (Major Refactoring):**
- Refactor the HTTP Organizer Peer and the daemon's authentication flow to ensure that participants are solely responsible for funding and submitting their own blockchain transactions.
- The Organizer Peer's role should be strictly limited to coordination (e.g., providing challenges, verifying signatures, listening to blockchain events) and never involve transaction submission on behalf of participants.